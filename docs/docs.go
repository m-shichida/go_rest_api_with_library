// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate_swagger = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/fishes": {
            "get": {
                "description": "魚の情報の一覧を返す",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fishes"
                ],
                "summary": "index",
                "parameters": [
                    {
                        "type": "string",
                        "description": "魚の名前",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fish"
                        }
                    }
                }
            },
            "post": {
                "description": "魚の情報を追加し、追加後の魚を返す",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fishes"
                ],
                "summary": "create",
                "parameters": [
                    {
                        "description": "全て必須項目",
                        "name": "fish_parameter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FishParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fish"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/fishes/{id}": {
            "get": {
                "description": "魚の詳細を返す",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fishes"
                ],
                "summary": "show",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fish"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "description": "魚の情報を削除する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fishes"
                ],
                "summary": "delete",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "description": "魚の情報を更新する",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "fishes"
                ],
                "summary": "update",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "fish ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "全て必須項目",
                        "name": "fish_parameter",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.FishParameter"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/model.Fish"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.Fish": {
            "type": "object",
            "required": [
                "description",
                "name"
            ],
            "properties": {
                "classification": {
                    "type": "integer",
                    "maximum": 2,
                    "minimum": 0
                },
                "created_at": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "maxLength": 100
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "model.FishParameter": {
            "type": "object",
            "properties": {
                "classification": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo_swagger holds exported Swagger Info so clients can modify it
var SwaggerInfo_swagger = &swag.Spec{
	Version:          "0.1",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "GO_REST_API",
	Description:      "Go REST API",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate_swagger,
}

func init() {
	swag.Register(SwaggerInfo_swagger.InstanceName(), SwaggerInfo_swagger)
}
