package handler

import (
	"net/http"
	"strconv"

	"go_rest_api/model"
	"go_rest_api/repository"

	"github.com/d4l3k/go-pry/pry"
	"github.com/labstack/echo/v4"
)

// FishIndex godoc
// @Summary      index
// @Description  魚の一覧を返す
// @Tags         fishes
// @Accept       json
// @Produce      json
// @Success      200  {object}  model.Fish
// @Router       /fishes [get]
func FishIndex(c echo.Context) error {
	fishes, err := repository.FishList()

	if err != nil {
		c.Logger().Error(err.Error())
		return c.JSON(http.StatusInternalServerError, err.Error())
	}

	return c.JSON(http.StatusOK, fishes)
}

// @Summary      create
// @Description  魚を追加し、追加後の魚を返す
// @tags         fishes
// @Accept       json
// @Produce      json
// @Success      200 {object} model.Fish
// @failure      500 {string} string
// @Router       /fishes [post]
// @Param        fish_parameter body model.PostFish true "全ての必須項目"
func FishCreate(c echo.Context) error {
	var fish *model.Fish

	if err := c.Bind(&fish); err != nil {
		c.Logger().Error(err.Error())

		return c.JSON(http.StatusBadRequest, err.Error())
	}

	result, err := repository.FishCreate(fish)
	if err != nil {
		c.Logger().Error(err.Error())

		return c.JSON(http.StatusInternalServerError, err.Error())
	}

	id, _ := result.LastInsertId()

	fish.ID = int(id)

	return c.JSON(http.StatusOK, fish)
}

// @Summary      show
// @Description  魚の詳細を返す
// @tags         fishes
// @Accept       json
// @Produce      json
// @Success      200 {object} model.Fish
// @failure      500 {string} string
// @Router       /fishes/:id [get]
// @Param        id path int true "fish ID"
func FishShow(c echo.Context) error {
	var fish *model.Fish

	pry.Apply(&pry.Scope{Vals:map[string]interface{}{ "FishShow": FishShow, "c": c, "fish": fish, "http": pry.Package{Name: "http", Functions: map[string]interface{}{"DefaultClient": http.DefaultClient,"Post": http.Post,"PostForm": http.PostForm,"Client": pry.Type(http.Client{}),"Get": http.Get,"ErrUseLastResponse": http.ErrUseLastResponse,"Head": http.Head,"Cookie": pry.Type(http.Cookie{}),"SameSiteLaxMode": http.SameSiteLaxMode,"SameSiteNoneMode": http.SameSiteNoneMode,"SameSite": pry.Type(http.SameSite(0)),"SameSiteDefaultMode": http.SameSiteDefaultMode,"SameSiteStrictMode": http.SameSiteStrictMode,"SetCookie": http.SetCookie,"NewFileTransport": http.NewFileTransport,"ServeContent": http.ServeContent,"Dir": pry.Type(http.Dir("")),"FS": http.FS,"FileServer": http.FileServer,"ServeFile": http.ServeFile,"Header": pry.Type(http.Header(map[string][]string(nil))),"ParseTime": http.ParseTime,"CanonicalHeaderKey": http.CanonicalHeaderKey,"PushOptions": pry.Type(http.PushOptions{}),"NoBody": http.NoBody,"MethodGet": http.MethodGet,"MethodPut": http.MethodPut,"MethodConnect": http.MethodConnect,"MethodOptions": http.MethodOptions,"MethodTrace": http.MethodTrace,"MethodHead": http.MethodHead,"MethodPost": http.MethodPost,"MethodPatch": http.MethodPatch,"MethodDelete": http.MethodDelete,"ErrMissingContentLength": http.ErrMissingContentLength,"ErrUnexpectedTrailer": http.ErrUnexpectedTrailer,"ParseHTTPVersion": http.ParseHTTPVersion,"ReadRequest": http.ReadRequest,"MaxBytesReader": http.MaxBytesReader,"ErrNotMultipart": http.ErrNotMultipart,"ErrShortBody": http.ErrShortBody,"ErrMissingBoundary": http.ErrMissingBoundary,"ErrNoCookie": http.ErrNoCookie,"ErrMissingFile": http.ErrMissingFile,"ProtocolError": pry.Type(http.ProtocolError{}),"NewRequest": http.NewRequest,"ErrNotSupported": http.ErrNotSupported,"Request": pry.Type(http.Request{}),"NewRequestWithContext": http.NewRequestWithContext,"ErrHeaderTooLong": http.ErrHeaderTooLong,"Response": pry.Type(http.Response{}),"ErrNoLocation": http.ErrNoLocation,"ReadResponse": http.ReadResponse,"Serve": http.Serve,"TimeoutHandler": http.TimeoutHandler,"TrailerPrefix": http.TrailerPrefix,"StateHijacked": http.StateHijacked,"ErrServerClosed": http.ErrServerClosed,"NotFound": http.NotFound,"ErrAbortHandler": http.ErrAbortHandler,"NewServeMux": http.NewServeMux,"HandleFunc": http.HandleFunc,"ServeTLS": http.ServeTLS,"StateClosed": http.StateClosed,"LocalAddrContextKey": http.LocalAddrContextKey,"ErrBodyNotAllowed": http.ErrBodyNotAllowed,"StripPrefix": http.StripPrefix,"Handle": http.Handle,"TimeFormat": http.TimeFormat,"ErrWriteAfterFlush": http.ErrWriteAfterFlush,"ServeMux": pry.Type(http.ServeMux{}),"Server": pry.Type(http.Server{}),"NotFoundHandler": http.NotFoundHandler,"ListenAndServe": http.ListenAndServe,"StateNew": http.StateNew,"Redirect": http.Redirect,"ErrContentLength": http.ErrContentLength,"StateIdle": http.StateIdle,"DefaultServeMux": http.DefaultServeMux,"ErrHijacked": http.ErrHijacked,"Error": http.Error,"ListenAndServeTLS": http.ListenAndServeTLS,"ServerContextKey": http.ServerContextKey,"DefaultMaxHeaderBytes": http.DefaultMaxHeaderBytes,"ConnState": pry.Type(http.ConnState(0)),"ErrHandlerTimeout": http.ErrHandlerTimeout,"RedirectHandler": http.RedirectHandler,"StateActive": http.StateActive,"DetectContentType": http.DetectContentType,"StatusHTTPVersionNotSupported": http.StatusHTTPVersionNotSupported,"StatusBadRequest": http.StatusBadRequest,"StatusUnauthorized": http.StatusUnauthorized,"StatusRequestTimeout": http.StatusRequestTimeout,"StatusTeapot": http.StatusTeapot,"StatusRequestHeaderFieldsTooLarge": http.StatusRequestHeaderFieldsTooLarge,"StatusTooManyRequests": http.StatusTooManyRequests,"StatusGatewayTimeout": http.StatusGatewayTimeout,"StatusSeeOther": http.StatusSeeOther,"StatusLengthRequired": http.StatusLengthRequired,"StatusUnsupportedMediaType": http.StatusUnsupportedMediaType,"StatusFound": http.StatusFound,"StatusPermanentRedirect": http.StatusPermanentRedirect,"StatusRequestURITooLong": http.StatusRequestURITooLong,"StatusPaymentRequired": http.StatusPaymentRequired,"StatusNotFound": http.StatusNotFound,"StatusRequestedRangeNotSatisfiable": http.StatusRequestedRangeNotSatisfiable,"StatusNonAuthoritativeInfo": http.StatusNonAuthoritativeInfo,"StatusNotAcceptable": http.StatusNotAcceptable,"StatusUnprocessableEntity": http.StatusUnprocessableEntity,"StatusText": http.StatusText,"StatusOK": http.StatusOK,"StatusMultipleChoices": http.StatusMultipleChoices,"StatusConflict": http.StatusConflict,"StatusVariantAlsoNegotiates": http.StatusVariantAlsoNegotiates,"StatusEarlyHints": http.StatusEarlyHints,"StatusFailedDependency": http.StatusFailedDependency,"StatusNotImplemented": http.StatusNotImplemented,"StatusServiceUnavailable": http.StatusServiceUnavailable,"StatusMovedPermanently": http.StatusMovedPermanently,"StatusInternalServerError": http.StatusInternalServerError,"StatusAccepted": http.StatusAccepted,"StatusMultiStatus": http.StatusMultiStatus,"StatusAlreadyReported": http.StatusAlreadyReported,"StatusLocked": http.StatusLocked,"StatusUpgradeRequired": http.StatusUpgradeRequired,"StatusGone": http.StatusGone,"StatusInsufficientStorage": http.StatusInsufficientStorage,"StatusLoopDetected": http.StatusLoopDetected,"StatusProcessing": http.StatusProcessing,"StatusResetContent": http.StatusResetContent,"StatusExpectationFailed": http.StatusExpectationFailed,"StatusNotExtended": http.StatusNotExtended,"StatusTemporaryRedirect": http.StatusTemporaryRedirect,"StatusRequestEntityTooLarge": http.StatusRequestEntityTooLarge,"StatusPreconditionRequired": http.StatusPreconditionRequired,"StatusCreated": http.StatusCreated,"StatusIMUsed": http.StatusIMUsed,"StatusProxyAuthRequired": http.StatusProxyAuthRequired,"StatusUnavailableForLegalReasons": http.StatusUnavailableForLegalReasons,"StatusNetworkAuthenticationRequired": http.StatusNetworkAuthenticationRequired,"StatusSwitchingProtocols": http.StatusSwitchingProtocols,"StatusPartialContent": http.StatusPartialContent,"StatusUseProxy": http.StatusUseProxy,"StatusForbidden": http.StatusForbidden,"StatusMethodNotAllowed": http.StatusMethodNotAllowed,"StatusTooEarly": http.StatusTooEarly,"StatusBadGateway": http.StatusBadGateway,"StatusContinue": http.StatusContinue,"StatusNoContent": http.StatusNoContent,"StatusNotModified": http.StatusNotModified,"StatusPreconditionFailed": http.StatusPreconditionFailed,"StatusMisdirectedRequest": http.StatusMisdirectedRequest,"ErrBodyReadAfterClose": http.ErrBodyReadAfterClose,"ErrLineTooLong": http.ErrLineTooLong,"Transport": pry.Type(http.Transport{}),"ProxyFromEnvironment": http.ProxyFromEnvironment,"DefaultMaxIdleConnsPerHost": http.DefaultMaxIdleConnsPerHost,"ErrSkipAltProtocol": http.ErrSkipAltProtocol,"DefaultTransport": http.DefaultTransport,"ProxyURL": http.ProxyURL,}}, "strconv": pry.Package{Name: "strconv", Functions: map[string]interface{}{"ParseBool": strconv.ParseBool,"FormatBool": strconv.FormatBool,"AppendBool": strconv.AppendBool,"ParseComplex": strconv.ParseComplex,"ParseFloat": strconv.ParseFloat,"ErrSyntax": strconv.ErrSyntax,"ParseUint": strconv.ParseUint,"ParseInt": strconv.ParseInt,"ErrRange": strconv.ErrRange,"Atoi": strconv.Atoi,"NumError": pry.Type(strconv.NumError{}),"IntSize": strconv.IntSize,"FormatComplex": strconv.FormatComplex,"FormatFloat": strconv.FormatFloat,"AppendFloat": strconv.AppendFloat,"FormatUint": strconv.FormatUint,"Itoa": strconv.Itoa,"AppendInt": strconv.AppendInt,"FormatInt": strconv.FormatInt,"AppendUint": strconv.AppendUint,"IsGraphic": strconv.IsGraphic,"QuoteToGraphic": strconv.QuoteToGraphic,"AppendQuoteRuneToGraphic": strconv.AppendQuoteRuneToGraphic,"UnquoteChar": strconv.UnquoteChar,"Quote": strconv.Quote,"AppendQuoteRuneToASCII": strconv.AppendQuoteRuneToASCII,"QuoteRuneToGraphic": strconv.QuoteRuneToGraphic,"IsPrint": strconv.IsPrint,"QuoteToASCII": strconv.QuoteToASCII,"AppendQuoteToGraphic": strconv.AppendQuoteToGraphic,"Unquote": strconv.Unquote,"QuoteRuneToASCII": strconv.QuoteRuneToASCII,"QuoteRune": strconv.QuoteRune,"CanBackquote": strconv.CanBackquote,"AppendQuote": strconv.AppendQuote,"AppendQuoteToASCII": strconv.AppendQuoteToASCII,"AppendQuoteRune": strconv.AppendQuoteRune,}}, "model": pry.Package{Name: "model", Functions: map[string]interface{}{"Fish": pry.Type(model.Fish{}),"PostFish": pry.Type(model.PostFish{}),}}, "repository": pry.Package{Name: "repository", Functions: map[string]interface{}{"FishList": repository.FishList,"FishCreate": repository.FishCreate,"FishGetById": repository.FishGetById,"SetDB": repository.SetDB,}}, "": pry.Package{Name: "", Functions: map[string]interface{}{}}, "echo": pry.Package{Name: "echo", Functions: map[string]interface{}{"DefaultBinder": pry.Type(echo.DefaultBinder{}),"FormFieldBinder": echo.FormFieldBinder,"BindingError": pry.Type(echo.BindingError{}),"NewBindingError": echo.NewBindingError,"ValueBinder": pry.Type(echo.ValueBinder{}),"QueryParamsBinder": echo.QueryParamsBinder,"PathParamsBinder": echo.PathParamsBinder,"POST": echo.POST,"REPORT": echo.REPORT,"HeaderAccessControlAllowOrigin": echo.HeaderAccessControlAllowOrigin,"HeaderCookie": echo.HeaderCookie,"HeaderAccessControlRequestMethod": echo.HeaderAccessControlRequestMethod,"GET": echo.GET,"ErrForbidden": echo.ErrForbidden,"New": echo.New,"MIMETextXMLCharsetUTF8": echo.MIMETextXMLCharsetUTF8,"HeaderAllow": echo.HeaderAllow,"HeaderAccessControlRequestHeaders": echo.HeaderAccessControlRequestHeaders,"ErrTooManyRequests": echo.ErrTooManyRequests,"MIMEApplicationMsgpack": echo.MIMEApplicationMsgpack,"HeaderXHTTPMethodOverride": echo.HeaderXHTTPMethodOverride,"PUT": echo.PUT,"HeaderWWWAuthenticate": echo.HeaderWWWAuthenticate,"HeaderXForwardedProtocol": echo.HeaderXForwardedProtocol,"HeaderXRealIP": echo.HeaderXRealIP,"MIMEApplicationJSONCharsetUTF8": echo.MIMEApplicationJSONCharsetUTF8,"MIMEApplicationForm": echo.MIMEApplicationForm,"MIMEApplicationProtobuf": echo.MIMEApplicationProtobuf,"MIMEMultipartForm": echo.MIMEMultipartForm,"GetPath": echo.GetPath,"HeaderLastModified": echo.HeaderLastModified,"HeaderAccessControlMaxAge": echo.HeaderAccessControlMaxAge,"ErrInvalidListenerNetwork": echo.ErrInvalidListenerNetwork,"MIMEApplicationJavaScriptCharsetUTF8": echo.MIMEApplicationJavaScriptCharsetUTF8,"HeaderOrigin": echo.HeaderOrigin,"HeaderXForwardedFor": echo.HeaderXForwardedFor,"HeaderAccessControlAllowCredentials": echo.HeaderAccessControlAllowCredentials,"ErrInvalidRedirectCode": echo.ErrInvalidRedirectCode,"WrapHandler": echo.WrapHandler,"HTTPError": pry.Type(echo.HTTPError{}),"CONNECT": echo.CONNECT,"HeaderContentEncoding": echo.HeaderContentEncoding,"HeaderXCorrelationID": echo.HeaderXCorrelationID,"MethodNotAllowedHandler": echo.MethodNotAllowedHandler,"MIMEApplicationXMLCharsetUTF8": echo.MIMEApplicationXMLCharsetUTF8,"MIMETextXML": echo.MIMETextXML,"MIMETextPlain": echo.MIMETextPlain,"HeaderReferrerPolicy": echo.HeaderReferrerPolicy,"Route": pry.Type(echo.Route{}),"MIMEApplicationJavaScript": echo.MIMEApplicationJavaScript,"HeaderVary": echo.HeaderVary,"HeaderXRequestID": echo.HeaderXRequestID,"HeaderAccessControlAllowMethods": echo.HeaderAccessControlAllowMethods,"HeaderAccessControlAllowHeaders": echo.HeaderAccessControlAllowHeaders,"MIMEOctetStream": echo.MIMEOctetStream,"HeaderIfModifiedSince": echo.HeaderIfModifiedSince,"ErrUnsupportedMediaType": echo.ErrUnsupportedMediaType,"HEAD": echo.HEAD,"ErrServiceUnavailable": echo.ErrServiceUnavailable,"ErrMethodNotAllowed": echo.ErrMethodNotAllowed,"ErrStatusRequestEntityTooLarge": echo.ErrStatusRequestEntityTooLarge,"ErrValidatorNotRegistered": echo.ErrValidatorNotRegistered,"MIMETextPlainCharsetUTF8": echo.MIMETextPlainCharsetUTF8,"HeaderAccept": echo.HeaderAccept,"HeaderXForwardedProto": echo.HeaderXForwardedProto,"HeaderXFrameOptions": echo.HeaderXFrameOptions,"OPTIONS": echo.OPTIONS,"HeaderContentType": echo.HeaderContentType,"HeaderXForwardedSsl": echo.HeaderXForwardedSsl,"HeaderXContentTypeOptions": echo.HeaderXContentTypeOptions,"ErrRequestTimeout": echo.ErrRequestTimeout,"MIMEApplicationJSON": echo.MIMEApplicationJSON,"HeaderContentSecurityPolicyReportOnly": echo.HeaderContentSecurityPolicyReportOnly,"ErrBadGateway": echo.ErrBadGateway,"MIMEApplicationXML": echo.MIMEApplicationXML,"PROPFIND": echo.PROPFIND,"HeaderXCSRFToken": echo.HeaderXCSRFToken,"TRACE": echo.TRACE,"MIMETextHTMLCharsetUTF8": echo.MIMETextHTMLCharsetUTF8,"HeaderAuthorization": echo.HeaderAuthorization,"ErrRendererNotRegistered": echo.ErrRendererNotRegistered,"NotFoundHandler": echo.NotFoundHandler,"DELETE": echo.DELETE,"HeaderXRequestedWith": echo.HeaderXRequestedWith,"HeaderContentLength": echo.HeaderContentLength,"HeaderUpgrade": echo.HeaderUpgrade,"HeaderContentSecurityPolicy": echo.HeaderContentSecurityPolicy,"ErrBadRequest": echo.ErrBadRequest,"HeaderXXSSProtection": echo.HeaderXXSSProtection,"ErrNotFound": echo.ErrNotFound,"ErrCookieNotFound": echo.ErrCookieNotFound,"Version": echo.Version,"ErrInternalServerError": echo.ErrInternalServerError,"ErrInvalidCertOrKeyType": echo.ErrInvalidCertOrKeyType,"Map": pry.Type(echo.Map(map[string]interface {}(nil))),"HeaderAcceptEncoding": echo.HeaderAcceptEncoding,"HeaderContentDisposition": echo.HeaderContentDisposition,"HeaderLocation": echo.HeaderLocation,"HeaderXUrlScheme": echo.HeaderXUrlScheme,"HeaderServer": echo.HeaderServer,"Echo": pry.Type(echo.Echo{}),"WrapMiddleware": echo.WrapMiddleware,"NewHTTPError": echo.NewHTTPError,"PATCH": echo.PATCH,"HeaderSetCookie": echo.HeaderSetCookie,"HeaderStrictTransportSecurity": echo.HeaderStrictTransportSecurity,"ErrUnauthorized": echo.ErrUnauthorized,"MIMETextHTML": echo.MIMETextHTML,"HeaderAccessControlExposeHeaders": echo.HeaderAccessControlExposeHeaders,"Group": pry.Type(echo.Group{}),"ExtractIPFromXFFHeader": echo.ExtractIPFromXFFHeader,"TrustLinkLocal": echo.TrustLinkLocal,"TrustIPRange": echo.TrustIPRange,"ExtractIPDirect": echo.ExtractIPDirect,"ExtractIPFromRealIPHeader": echo.ExtractIPFromRealIPHeader,"TrustLoopback": echo.TrustLoopback,"TrustPrivateNet": echo.TrustPrivateNet,"DefaultJSONSerializer": pry.Type(echo.DefaultJSONSerializer{}),"Response": pry.Type(echo.Response{}),"NewResponse": echo.NewResponse,"Router": pry.Type(echo.Router{}),"NewRouter": echo.NewRouter,}}, }})

	id, _ := strconv.Atoi(c.QueryParam("id"))
	fish, err := repository.FishGetById(id)

	if err != nil {
		c.Logger().Error(err.Error())
		return c.JSON(http.StatusInternalServerError, err.Error())
	}

	return c.JSON(http.StatusOK, fish)
}
